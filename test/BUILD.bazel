load("@EmbeddedSystemsBuildScripts//Unity:unity.bzl", "generate_a_unity_test_for_every_file", "mock", "unity_test")

#generate_a_unity_test_for_every_file(
#    cexception = False,
#    file_list = glob(["*_Test.c"]),
#    deps = [
#        "//:Library",
#        "//:HdrOnlyLib",
#    ],
#)

cc_library(
    name = "BitManipulationHdrForTesting",
    hdrs = ["header_replacements/EmbeddedUtilities/BitManipulation.h"],
    strip_include_prefix = "header_replacements",
    visibility = ["//:__pkg__"],
)

mock(
    name = "mock_ElasticNodemiddleware",
    srcs = ["//:elasticnodemiddleware/elasticNodeMiddleware.h"],
    copts = ["-DTEST"],
    deps = ["//:ElasticNodeMiddlewareLibHdr"],
)

mock(
    name = "mock_ElasticNodeMiddleware_Internal",
    srcs = ["//:elasticnodemiddleware/elasticNodeMiddleware_internal.h"],
    copts = ["-DTEST"],
    deps = ["//:ElasticNodeMiddlewareLibHdr"],
)

mock(
    name = "mock_Reconfigure_Multiboot",
    srcs = ["//:elasticnodemiddleware/reconfigure_multiboot_avr.h"],
    copts = ["-DTEST"],
    deps = ["//:Reconfigure_MultibootLibHdr"],
)

mock(
    name = "mock_Reconfigure_Multiboot_Internal",
    srcs = ["//:elasticnodemiddleware/reconfigure_multiboot_internal_avr.h"],
    deps = ["//:Reconfigure_MultibootLibHdr"],
)

mock(
    name = "mock_Xmem",
    srcs = ["//:elasticnodemiddleware/xmem.h"],
    copts = ["-DTEST"],
    deps = ["//:XMemLibHdr"],
)

mock(
    name = "mock_Bitmanipulation",
    srcs = ["//test:header_replacements/EmbeddedUtilities/BitManipulation.h"],
    copts = ["-DTEST"],
    deps = [":BitManipulationHdrForTesting"],
)

mock(
    name = "mock_InterruptManager",
    srcs = ["//:elasticnodemiddleware/interruptManager.h"],
    deps = ["//:Interrupt_ManagerLibHdr"]
)

mock(
    name = "mock_RegisterAbstraction",
    srcs = ["//:elasticnodemiddleware/registerAbstraction.h"],
    deps = ["//:RegisterAbstractionLibHdr"]
)

unity_test(
    copts = ["-DTEST"],
    file_name = "elasticNodeMiddleware_Test.c",
    deps = [
        "mock_Bitmanipulation",
        "mock_ElasticNodeMiddleware_Internal",
        "mock_Reconfigure_Multiboot",
        "//:ElasticNodeMiddlewareLibTest",
    ],
)

unity_test(
    copts = ["-DTEST"],
    file_name = "elasticNodeMiddleware_internal_Test.c",
    deps = [
        "mock_Bitmanipulation",
        "//:ElasticNodeMiddlewareLibTest",
    ],
)

unity_test(
    copts = ["-DTEST"],
    file_name = "reconfigure_multiboot_avr_Test.c",
    deps = [
        "mock_Bitmanipulation",
        "mock_ElasticNodemiddleware",
        "mock_Reconfigure_Multiboot_Internal",
        "mock_Xmem",
        "mock_InterruptManager",
        "mock_RegisterAbstraction",
        "//:Reconfigure_multibootLibTest",
    ],
)

unity_test(
    cexception = False,
    copts = ["-DTEST"],
    file_name = "reconfigure_multiboot_internal_avr_Test.c",
    deps = [
        "//:Reconfigure_multibootLibTest",
    ],
)

unity_test(
    copts = ["-DTEST"],
    file_name = "xmem_Test.c",
    deps = [
        "mock_Bitmanipulation",
        "//:XMemLibTest",
    ],
)

unity_test(
    cexception = False,
    copts = ["-DTEST"],
    file_name = "interrupt_manager_avr_Test.c",
    deps = [
        "//:Interrupt_ManagerLibTest",
    ],
)

unity_test(
    cexception = False,
    file_name = "registerAbstraction_Test.c",
    deps = ["//:RegisterAbstractionLib"],
)