load("@EmbeddedSystemsBuildScripts//Unity:unity.bzl", "generate_a_unity_test_for_every_file", "mock", "unity_test")

#generate_a_unity_test_for_every_file(
#    cexception = False,
#    file_list = glob(["*_Test.c"]),
#    deps = [
#        "//:Library",
#        "//elasticnodemiddleware:HdrOnlyLib",
#    ],
#)


mock(
    name = "mock_RegisterAbstraction",
    srcs = ["//elasticnodemiddleware:registerAbstraction.h"],
    deps = ["//elasticnodemiddleware:RegisterAbstractionLibHdr"],
)

mock(
    name = "mock_ElasticNodeMiddleware_Internal",
    srcs = ["//elasticnodemiddleware:elasticNodeMiddleware_internal.h"],
    deps = ["//elasticnodemiddleware:ElasticNodeMiddlewareLibHdr"],
)

mock(
    name = "mock_Reconfigure_Multiboot_Internal",
    srcs = ["//elasticnodemiddleware:reconfigure_multiboot_internal.h"],
    deps = ["//elasticnodemiddleware:Reconfigure_MultibootLibHdr"],
)

mock(
    name = "mock_Reconfigure_Multiboot",
    srcs = ["//elasticnodemiddleware:reconfigure_multiboot.h"],
    deps = ["//elasticnodemiddleware:Reconfigure_MultibootLibHdr"],
    copts = ["-DTEST"],
)

mock(
    name = "mock_ElasticNodemiddleware",
    srcs = ["//elasticnodemiddleware:elasticNodeMiddleware.h"],
    copts = ["-DTEST"],
    deps = ["//elasticnodemiddleware:ElasticNodeMiddlewareLibHdr"],
)

mock(
    name = "mock_Xmem",
    srcs = ["//elasticnodemiddleware:xmem.h"],
    copts = ["-DTEST"],
    deps = ["//elasticnodemiddleware:XMemLibHdr"],
)

mock(
    name = "mock_Leds_Internal",
    srcs = ["//elasticnodemiddleware:leds_internal.h"],
    deps = ["//elasticnodemiddleware:LedsLibHdr"],
)

mock(
    name = "mock_Leds",
    srcs = ["//elasticnodemiddleware:leds.h"],
    deps = ["//elasticnodemiddleware:LedsLibHdr"],
)

mock(
    name = "mock_Lufa",
    srcs = ["//elasticnodemiddleware:lufa.h"],
    deps = ["//elasticnodemiddleware:LufaLibHdr"],
)

mock(
    name = "mock_Configuration_Flash_internal",
    srcs = ["//elasticnodemiddleware:configuration_flash_internal.h"],
    deps = ["//elasticnodemiddleware:ConfigurationFlashLibHdr"]
)
unity_test(
    copts = ["-DTEST"],
    file_name = "elasticNodeMiddleware_Test.c",
    deps = [
        "mock_ElasticNodeMiddleware_Internal",
        "mock_RegisterAbstraction",
        "mock_Reconfigure_Multiboot",
        "//:ElasticNodeMiddlewareLibTest",
    ],
)

unity_test(
    cexception = False,
    file_name = "registerAbstraction_Test.c",
    deps = ["//:RegisterAbstractionLib"],
)

unity_test(
    copts = ["-DTEST"],
    file_name = "xmem_Test.c",
    deps = [
        "mock_RegisterAbstraction",
        "//:XMemLibTest",
    ],
)

unity_test(
    copts = ["-DTEST"],
    file_name = "reconfigure_multiboot_Test.c",
    deps = [
        "mock_ElasticNodemiddleware",
        "mock_Reconfigure_Multiboot_Internal",
        "mock_RegisterAbstraction",
        "mock_Xmem",

        "//:Reconfigure_multibootLibTest",
    ],
)

unity_test(
    cexception = False,
    copts = ["-DTEST"],
    file_name = "configuration_flash_Test.c",
    deps = [
        "mock_ElasticNodemiddleware",
        "//:ConfigurationLibTest",
        "mock_Leds",
        "mock_Lufa",
        "mock_Configuration_Flash_internal"
    ]
)

unity_test(
    cexception = False,
    copts = ["-DTEST"],
    file_name = "leds_Test.c",
    deps = [
        "//:LedsLibTest",
        "mock_Leds_Internal",
        "mock_RegisterAbstraction"
    ]
)